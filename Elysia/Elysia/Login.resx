<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        oPU4AAAAAElFTkSuQmCC
</value>
  </data>
</root>